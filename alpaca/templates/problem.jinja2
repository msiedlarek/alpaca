{% extends "alpaca:templates/base.jinja2" %}

{% block head_title %}#{{ problem.id }} - {{ super() }}{% endblock %}

{% block body_content %}
    <h1>{% trans %}Problem{% endtrans %} #{{ problem.id }}</h1>
    <table class="table table-bordered alpaca-detail-table">
        <tbody>
            <tr>
                <th>{% trans %}Hash{% endtrans %}:</th>
                <td><code>{{ problem.hash }}</code></td>
            </tr>
            <tr>
                <th>{% trans %}Affected environments{% endtrans %}:</th>
                <td>
                    {%- for environment in affected_environments -%}
                        <a href="{{ environment.url }}">{{ environment.name }}</a>
                        {%- if not loop.last -%}
                            ,
                        {%- endif %}
                    {% endfor -%}
                </td>
            </tr>
            <tr>
                <th>{% trans %}First occurrence{% endtrans %}:</th>
                <td>{{ problem.first_occurrence }}</td>
            </tr>
            <tr>
                <th>{% trans %}Last occurrence{% endtrans %}:</th>
                <td>{{ problem.last_occurrence }}</td>
            </tr>
            <tr>
                <th>{% trans %}Occurrence count{% endtrans %}:</th>
                <td>{{ problem.occurrence_count }}</td>
            </tr>
            <tr>
                <th>{% trans %}Tags{% endtrans %}:</th>
                <td>
                    <div id="occurrence-tags" class="input-append">
                        <input class="ui-widget-content ui-autocomplete-input" value="{{ problem.tags|join(", ") }}" name="tags" type="text" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true">
                        <button class="btn btn-primary" type="button">{% trans %}Save{% endtrans %}</button>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    {% if problem.occurrences|count > 1 %}
        <h2 id="occurrences">{% trans %}Occurrences{% endtrans %}</h2>
    {% else %}
        <h2 id="occurrences">{% trans %}Occurrence{% endtrans %}</h2>
    {% endif %}
    <ul class="nav nav-tabs alpaca-occurrences">
        {% for problem_occurrence in problem.occurrences %}
            <li
                {%- if problem_occurrence.id == occurrence.id %} class="active"{% endif -%}
            >
                <a href="{{ problem_occurrence.url }}#occurrences">{{ problem.occurrence_count - loop.index0 }}</a>
            </li>
        {% endfor %}
    </ul>
    <table class="table table-bordered alpaca-detail-table">
        <tbody>
            <tr>
                <th>{% trans %}Date{% endtrans %}:</th>
                <td>{{ occurrence.date }}</td>
            </tr>
            <tr>
                <th>{% trans %}Environment{% endtrans %}:</th>
                <td><a href="{{ occurrence.environment.url }}">{{ occurrence.environment.name }}</a></td>
            </tr>
            <tr>
                <th>{% trans %}Message{% endtrans %}:</th>
                <td><pre>{{ occurrence.message }}</pre></td>
            </tr>
        </tbody>
    </table>
    {% if occurrence.stack_trace %}
        <h3>Stack trace</h3>
        <div id="stack-trace-{{ problem.id }}-{{ occurrence.id }}" class="accordion alpaca-stack-trace">
            {% for frame in occurrence.stack_trace %}
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <a class="accordion-toggle" data-toggle="collapse" href="#stack-trace-{{ problem.id }}-{{ occurrence.id }}-frame-{{ loop.index }}">
                            <code>{{ frame.function }}()</code> {% trans %}in{% endtrans %} <code>{{ frame.filename }}</code>:<code>{{ frame.line_number }}</code>
                        </a>
                    </div>
                    <div id="stack-trace-{{ problem.id }}-{{ occurrence.id }}-frame-{{ loop.index }}" class="accordion-body collapse">
                        <div class="accordion-inner">
                            <pre class="prettyprint"><code>{{ frame.pre_context|join("\n") }}<div class="alpaca-context-line">{{ frame.context }}</div>{{ frame.post_context|join("\n") }}</code></pre>
                            {% if frame.variables %}
                                <table class="table table-condensed alpaca-detail-table alpaca-stack-trace-variables">
                                    <tbody>
                                        {% for name, value in frame.variables.iteritems() %}
                                            <tr>
                                                <th>{{ name }}</th>
                                                <td>{{ value.decode('utf-8', 'replace') }}</td>
                                            </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% endif %}
    {% if occurrence.environment_data %}
        {% for section, data in occurrence.environment_data.iteritems() %}
            {% if data %}
                <h3>{{ section }}</h3>
                <table class="table table-bordered table-condensed alpaca-detail-table alpaca-environment-data">
                    <tbody>
                        {% for name, value in data.iteritems() %}
                            <tr>
                                <th>{{ name }}</th>
                                <td>{{ value.decode('utf-8', 'replace') }}</td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endblock %}

{% block body_scripts %}
    {{ super() }}
    <script>
        var ALPACA_SAVE_TAGS = false;
        var ALPACA_CSRF_TOKEN = "{{ request.session.get_csrf_token() }}";
        function alpaca_save_tags(tags) {
            if (!ALPACA_SAVE_TAGS) {
                return;
            }
            $.post(
                "{{ request.route_url('alpaca.problems.set_tags', problem_id=problem.id) }}",
                {
                    csrf_token: ALPACA_CSRF_TOKEN,
                    tags: tags
                }
            );
        }
        function alpaca_tag_added(event, tag) {
            var tags = $("#occurrence-tags input[name='tags']").tagit("assignedTags");
            alpaca_save_tags(tags);
        }
        function alpaca_tag_removed(event, tag) {
            var tag = tag.find(".tagit-label").text();
            var tags = $("#occurrence-tags input[name='tags']").tagit("assignedTags");
            tags.splice(tags.indexOf(tag), 1);
            alpaca_save_tags(tags);
        }
        $(function(){
            $("#occurrence-tags input[name='tags']").tagit({
                onTagAdded: alpaca_tag_added,
                onTagRemoved: alpaca_tag_removed
            });
            setTimeout(function(){ALPACA_SAVE_TAGS = true;}, 100);
            $("#occurrence-tags button").hide();
            $(".alpaca-stack-trace .collapse").collapse({
                toggle: false
            });
            prettyPrint();
        });
    </script>
{% endblock %}
